{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","e","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","CSSTransition","TransitionGroup","component","name","price","onClick","removeFish","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.c824522a.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from \"../helpers\"\n\nclass StorePicker extends React.Component {\n    myInput = React.createRef();\n    static propTypes = {\n        history: PropTypes.object\n    }\n    goToStore = e => {\n        // 1. Stop the form form submitting\n        e.preventDefault();\n        // 2. Get the text from that input\n        const storeName = this.myInput.current.value\n        // 3. Change the page to /store/whatever-was-entered\n        this.props.history.push(`/store/${storeName}`)\n    }\n    render() {\n        return (\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\n                <h2>Please enter a store</h2>\n                <input type=\"text\" \n                    ref={this.myInput}\n                    required \n                    placeholder=\"Store Name\" \n                    defaultValue ={getFunName()}/>\n                <button type=\"submit\">Visit Store →</button>\n            </form>\n        );\n    }\n}\n\nexport default StorePicker;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = (props) => (\n    <header className=\"top\">\n        <h1>Catch \n            <span className=\"ofThe\">\n                <span className=\"of\">of</span>\n                <span className=\"the\">the</span> \n            </span>\n            Day\n        </h1>\n        <h3 className=\"tagline\">\n            <span>{props.tagline}</span>\n        </h3>\n    </header>\n);\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nclass Order extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        order: PropTypes.object,\n        removeFish: PropTypes.func\n    }\n    renderOrder = (key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === 'available';\n        const transitionOptions = {\n            classNames: \"order\", \n            key,\n            timeout: { enter: 500, exit: 500 }\n        }\n        // Make sure fish is loaded before we continue\n        if(!fish) return null;\n\n        if(!isAvailable) {\n            return (\n                <CSSTransition {...transitionOptions}>\n                    <li key={key}>\n                        Sorry {fish ? fish.name : 'fish'} is no longer available\n                        </li>\n                </CSSTransition>\n            );\n        };\n        return (\n            <CSSTransition {...transitionOptions}>\n                <li key={key}>\n                    <span>\n                        <TransitionGroup component=\"span\" className=\"count\">\n                            <CSSTransition \n                                classNames=\"count\" \n                                key={count} \n                                timeout={{ enter: 500, exit: 500 }}\n                            >\n                                <span>{count}</span>\n                            </CSSTransition>\n                        </TransitionGroup>\n                        lbs {fish.name} \n                        <strong>{formatPrice(count * fish.price)}</strong>\n                        <button onClick={() => this.props.removeFish(key)}>&times;</button>\n                    </span>\n                </li>\n            </CSSTransition>    \n        );\n    };\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if(isAvailable) {\n                return prevTotal + (count * fish.price);\n            } \n            return prevTotal;\n        }, 0);\n\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\" className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    Total: \n                    <strong>{formatPrice(total)}</strong>   \n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Order;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    static propTypes = {\n        addFish: PropTypes.func\n    }\n    \n    createFish = e => {\n        e.preventDefault();\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value,\n        }\n        this.props.addFish(fish);\n        // Refresh the form\n        e.currentTarget.reset();\n    }\n    render() {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" /> \n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n                <select name=\"status\" ref={this.statusRef} >\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select> \n                 \n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n                <button type=\"submit\">+ Add Fish</button>\n            </form>\n        )\n    }\n}\n\nexport default AddFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n    static propTypes = {\n        updateFish: PropTypes.func,\n        index: PropTypes.string,\n        fish: PropTypes.shape({\n            name: PropTypes.string,\n            status: PropTypes.string,\n            desc: PropTypes.string,\n            image: PropTypes.string,\n            price: PropTypes.number\n        })\n    }\n    handleChange=  e => {\n        console.log(e.currentTarget.value)\n        // update that fish\n        // 1. Take a copy of the curent fish\n        const updatedFish = { \n            ...this.props.fish, \n            [e.currentTarget.name]: e.currentTarget.value\n        };\n        this.props.updateFish(this.props.index, updatedFish);\n    }\n    render() {\n        return (\n            <div className=\"fish-edit\">\n                <input \n                    type=\"text\" \n                    name=\"name\" \n                    onChange={this.handleChange} \n                    value = {this.props.fish.name} \n                />\n                <input \n                    type=\"text\" \n                    name=\"price\" \n                    onChange={this.handleChange} \n                    value = {this.props.fish.price} \n                />\n                <select \n                    type=\"text\" \n                    name=\"status\" \n                    onChange={this.handleChange} \n                    value = {this.props.fish.status} >\n                        <option value=\"available\">Fresh!</option>\n                        <option value=\"unavailable\">Sold Out!</option>\n                </select> \n                <textarea  \n                    name=\"desc\" \n                    onChange={this.handleChange} \n                    value = {this.props.fish.desc} \n                />\n                <input \n                    type=\"text\" \n                    name=\"image\" \n                    onChange={this.handleChange} \n                    value = {this.props.fish.image} \n                />   \n                <button onClick={() => this.props.deleteFish(this.props.index)}>\n                    Remove Fish\n                </button>         \n            </div>\n        );\n    }\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory.</p>\n        <button className=\"github\" \n            onClick={() => props.authenticate('Github')}>\n                Log in with GitHub\n        </button>\n        <button className=\"facebook\" \n            onClick={() => props.authenticate('Facebook')}>\n                Log in with Facebook\n        </button>\n    </nav>\n);\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n}\n\nexport default Login;","import Rebase from 're-base';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/database';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyB4nfdpE5TRMLL4QMNjFkYWyOaD577M2yA\",\n    authDomain: \"catch-of-the-day-eli-g.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-eli-g-default-rtdb.firebaseio.com\",\n})\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// This is a default export\nexport default base;","import React from 'react';\nimport firebase from 'firebase';\nimport PropTypes from 'prop-types';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\n\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        updatefish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func\n    };\n\n    state = {\n        uid: null,\n        owner: null\n    }\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if(user) {\n                this.authHandler({ user });\n            }\n        })\n    }\n\n    authHandler = async authData => {\n        // 1. Look up the current store in firebase database\n        const store = await base.fetch(this.props.storeId, { context: this });\n        // 2. Claim it if there is no owner\n        if(!store.owner) {\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            });\n        };\n        // 3. Set the state of the inventory component to reflect the current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        })\n    }\n    authenticate = provider => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp\n            .auth()\n            .signInWithPopup(authProvider)\n            .then(this.authHandler);\n    };\n\n    logout = async () => {\n        await firebase.auth().signOut();\n        this.setState({ uid: null })\n    }\n\n    render() {\n        const logout = <button onClick={this.logout}>Log Out</button>\n\n        // Check if they are logged in\n        if (!this.state.uid) {\n            return <Login authenticate={this.authenticate} />;\n        }\n        // Check if they are the owner of the store\n        if (this.state.uid !== this.state.owner) {\n            return (\n                <div>\n                    <p>Sorry, you are not the owner!</p>\n                    {logout}\n                </div>\n            );\n        }\n        // They must be the owner, render the inventory\n        return (\n            <div className=\"inventory\">\n                <h2>Inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(key => (\n                <EditFishForm \n                    key={key} \n                    index={key}\n                    fish={this.props.fishes[key]} \n                    updateFish = {this.props.updateFish} \n                    deleteFish = {this.props.deleteFish}\n                />\n                ))}\n                <AddFishForm addFish={this.props.addFish} />\n                <button onClick={this.props.loadSampleFishes}>\n                    Load Sample Fishes\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\n\nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number,\n        }),\n        addToOrder: PropTypes.func,\n    }\n    render() {\n        const { image, name, price, desc, status } = this.props.details;\n        const isAvailable = status === 'available';\n        return (\n            <li className=\"single-fish\">\n                <img src={image} alt={name} />\n                <h3 className=\"fish-name\">\n                    {name}\n                    <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>\n                    {isAvailable ? 'Add To Order' : 'Sold Out!'}\n                </button>\n            </li>\n        );\n    }\n}\n\nexport default Fish;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {}\n    };\n\n    static propTypes = {\n        match: PropTypes.object\n    }\n\n    componentDidMount() {\n        const { params } = this.props.match;\n        // First reeinstate local storage\n        const localStorageRef = localStorage.getItem(params.storeId);\n        if(localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef) });\n        }\n\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: \"fishes\"\n        });\n    }\n\n    componentDidUpdate() {\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order))\n    }\n    \n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n\n    addFish = fish => {\n        // 1. Tale a copy of the existing state\n        const fishes = {...this.state.fishes};\n        // 2. Add our new fish to that fishes variable\n        fishes[`fish${Date.now()}`] = fish;\n        // 3. Set new fishes object to state\n        // typically we would first declare which state to update and the variable to which we are updating, \n        // since the state and updated value are named the same we can use one word here, fishes\n        this.setState({ fishes });\n    };\n\n    updateFish = (key, updatedFish) => {\n        // take copy of current state of fishes\n        const fishes = {...this.state.fishes};\n        // 2. Upsdate that state\n        fishes[key] = updatedFish;\n        // 3. Set that to state\n        this.setState({ fishes });\n    }\n\n    deleteFish = (key) => {\n        // 1. take a copy of state\n        const fishes = { ...this.state.fishes };\n        // 2. Update the state\n        fishes[key] = null;\n        // 3. Update state\n        this.setState({ fishes });\n    }\n    \n    loadSampleFishes = () => {\n        this.setState({ fishes: sampleFishes });\n    };\n\n    addToOrder = key => {\n        // 1. Take a copy of state\n        const order = { ...this.state.order };\n        // 2. Either add to order or update number in our order\n        order[key] = order[key] + 1 || 1;\n        // 3. Call setState to update our state object\n        this.setState({ order });\n    };\n\n    removeFish = (key) => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. Remove item from order\n        delete order[key];\n        // 3. Update state\n        this.setState({ order });\n    };\n\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\"/>\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key => \n                        <Fish \n                            key={key} \n                            index={key}\n                            details={this.state.fishes[key]} \n                            addToOrder={this.addToOrder}/>\n                        )}\n                    </ul>\n                </div>\n                <Order \n                    fishes={this.state.fishes} \n                    order={this.state.order}\n                    removeFish={this.removeFish}\n                />\n                <Inventory \n                    addFish = {this.addFish} \n                    updateFish = {this.updateFish}\n                    deleteFish = {this.deleteFish}\n                    loadSampleFishes = {this.loadSampleFishes}\n                    fishes = {this.state.fishes}\n                    storeId = {this.props.match.params.storeId}\n                />\n            </div>\n        )\n    }\n}\n\nexport default App;\n\n","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h2>Not Found!?!</h2>\n    </div>\n)\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from \"./StorePicker\";\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={StorePicker} />\n            <Route path=\"/store/:storeId\" component={App} />\n            <Route component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\n\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}